<template>
  <div class="modal-mask">
    <div class="modal-dialog modal-item">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title">{{ popupTitle }}</h4>
                <button type="button" class="close"  @click="$emit('close')">
                        <span aria-hidden="true">×</span>
                        <span class="sr-only">close</span>
                    </button>
            </div>
            <div class="modal-body">
              <!-- 구매발주서 등록정보-->
              <item-info></item-info>

              <!-- 구매발주서 품목리스트 -->
              <itme-add></itme-add>
            </div>

             <div class="modal-footer">
                <div class="row col">
                    <div class="col-sm-6 d-flex justify-content-start no-padding-left">
                        <button type="button" class="btn btn-outline-primary">신규전표</button>
                    </div>
                    <div class="col-sm-6 d-flex justify-content-end no-padding-right">
                        <button type="button" class="btn btn-primary margin-right-5" @click="handelSave">저장</button>
                        <button type="button" class="btn btn-info margin-right-5" @click="openModalPopup('buyInvoicePrint')">인쇄</button>
                        <button type="button" class="btn btn-secondary"  @click="$emit('close')">닫기</button>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <buy-invoice-print-popup title="구매발주서 인쇄" v-if="modalOpenFlag && modalPopupId === 'buyInvoicePrint'" @close="closeModalPopup"></buy-invoice-print-popup>
</div>
</template>

<script>

import BuyInvoicePrintPopup from '@/components/popup/print/BuyInvoicePrintPopup.vue'
import ItmeAdd from '../buy/ItmeAdd.vue'
import ItemInfo from '../buy/ItemInfo.vue'
import { mapActions } from 'vuex'

export default {
  components: { BuyInvoicePrintPopup, ItmeAdd, ItemInfo },
  name: 'productSelectPopup',
  props: {
    title: {
      type: String,
      require: true
    },
    modalParamObj: {
      type: [Object, String]
    }
  },
  data () {
    return {
      modalOpenFlag: false, // 모달창 openFlag
      modalPopupId: '',
      popupTitle: ''
    }
  },
  mounted () {
    if (this.modalParamObj === '') {
      this.popupTitle = this.title
    } else {
      this.popupTitle = '구매발주서 수정'
      this.getDetail(this.modalParamObj)
    // 수정 api ---> 구매발주서 등록후 할것
    }
  },
  computed: {
    totalSupplyPrice () { // 모든항목 합계계산
      return this.row.reduce((sum, arr) => {
        sum = sum + arr.dpiSupplyPrice
        return sum
      }, 0)
    },
    totalTax () { // 모든항목 합계계산
      return this.row.reduce((sum, arr) => {
        return sum + arr.dpiTax
      }, 0)
    },
    totalCount () { // 모든항목 합계계산
      return this.row.reduce((sum, arr) => {
        return sum + arr.dpiCount
      }, 0)
    },
    totalPrice () { // 모든항목 합계계산
      return this.row.reduce((sum, arr) => {
        return sum + arr.dpiTotalPrice
      }, 0)
    }
  },
  methods: {
    // api
    ...mapActions('itemInvoiceStore', [
      'inputPurchaseInvoiceAdd'
    ]),
    handelSave () {
      // this.row, this.orderList ==> params
      let params = {}
      let porderList = {}
      porderList.rctCode = '00211349'
      porderList.dcuCode = this.orderList.dcuCode
      porderList.dpoSerialNo = ''
      porderList.dpoOrderRegdate = this.state.outdate
      porderList.dpoWarehousingRegdate = this.state.indate
      porderList.dpoState = '진행'
      porderList.dpoIncome = '내수'
      porderList.dpoMemo = this.orderList.dpoMemo
      porderList.dpoOrderName = this.orderList.dpoOrderName
      porderList.dpoRegdate = ''
      porderList.dpoLastdate = ''
      params.proderItems = this.row // component에서 가지고 오기
      params.porderList = porderList
      this.inputPurchaseInvoiceAdd(params)
    },
    // 모달팝업 open
    openModalPopup (id) {
      switch (id) {
        case 'buyInvoicePrint': // 구매발주서 인쇄
          this.modalPopupId = 'buyInvoicePrint'
          break
      }
      this.modalOpenFlag = true
    },
    // 모달창 close
    closeModalPopup (data) {
      this.modalPopupId = ''
      this.modalOpenFlag = false
    }
  }
}
</script>

<style>

</style>
