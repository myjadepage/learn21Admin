
import {itemApi} from '@/api'
const itemStore = {
  namespaced: true,
  state: {
    mainColumnDef: [
      { label: '품목분류', name: 'depthFullName', sort: true },
      { label: '품목ID', name: 'itemId', sort: true },
      { label: '품목명', name: 'itemName', sort: true, row_classes: 'table-text-left' },
      { label: '취급', name: 'itemHandling', sort: true, row_classes: 'table-text-center' },
      { label: '과세구분(매출)', name: 'poserpTaxType', sort: true },
      { label: '과세구분(매입)', name: 'itemTaxationPurchase', sort: true },
      { label: '재고관리', name: 'itemRethinType', sort: true },
      { label: '등록일자', name: 'itemCreatedate', sort: true }
    ],
    mainRowData: [],
    categoryCodeList: [], /* 품목코드목록 */
    cboBicCodeList: [], /* 대분류코드 Combo */
    cboMidCodeList: [] /* 중분류코드 Combo */
  },
  getters: {
    getMainColumnDef: state => state.mainColumnDef,
    getMainRowData: state => state.mainRowData,
    getCategoryCodeList: state => state.categoryCodeList,
    getCboBicCodeList: state => state.cboBicCodeList,
    getCboMidCodeList: state => state.cboMidCodeList
  },
  mutations: {
    mainRowData: (state, payload) => { state.mainRowData = payload },
    categoryCodeList: (state, payload) => {
      state.categoryCodeList = payload
      // 대분류코드
      state.cboBicCodeList = payload.filter(x => x.icParentNo === null)
    },
    cboMidCodeList: (state, payload) => { state.cboMidCodeList = payload }
  },
  actions: {
    setMainRowData: ({commit}, payload) => {
      // 품목리스트 조회
      itemApi.findItemList(payload)
        .then(res => { commit('mainRowData', res) })
        .catch(err => {
          console.log(err)
        })
    },
    setCategoryCodeList: ({commit}, payload) => {
      // 품목분류코드 조회
      itemApi.findCategoryCode(payload)
        .then(res => {
          commit('categoryCodeList', res)
        })
        .catch(err => {
          console.log(err)
        })
    },
    setCboMidCodeList: ({commit}, payload) => { commit('cboMidCodeList', payload) }
  }
}

export default itemStore
