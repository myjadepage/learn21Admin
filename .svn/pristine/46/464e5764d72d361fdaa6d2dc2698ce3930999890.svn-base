<template>
<div class="container-fluid">
    <div class="row">
     <PageHeader :pageCurrentInfo="($route.params.id) ? {title: 'FAQ보기', groupName: '운영관리'} : pageCurrentInfo"/>

              <div class="col-sm-12">

            <!-- 작성영역 시작-->
            <div class="widget has-shadow">
                <div class="widget-body">
                    <table class="table table-bordered totla-info" summary="FAQ 등록">
                        <colgroup>
                            <col width="10%">
                            <col width="40%">
                            <col width="10%">
                            <col width="40%">
                        </colgroup>
                        <tbody>
                            <tr>
                                <th scope="row"><span class="text-primary">분류</span></th>
                                <td>
                                    <div class="row">
                                        <div class="col-sm-4">
                                            <select class="form-control" v-model="faq.faqCategoryCd" ref="faqCategoryCd">
                                                <option v-for="(item, index) in this.rows" :key="index">
                                                {{item.cdName}}
                                                </option>
                                            </select>
                                        </div>

                                    </div>
                                </td>
                                <th><span class="text-primary">분류 내 표시 순서</span></th>
                                <td>
                                    <div class="row">
                                        <div class="col col-sm-4">
                                            <input type="text" class="form-control" placeholder="" v-model="faq.dispOrder" ref="dispOrder">
                                        </div>
                                    </div>
                                </td>
                            </tr>

                            <tr>
                                <th scope="row"><span class="text-primary">제목</span></th>
                                <td colspan="7">

                                    <input type="text" class="form-control"   placeholder="" v-model="faq.title" ref="title" >

                                </td>

                            </tr>
                            <tr>
                                <th scope="row"><span class="text-primary">내용</span></th>
                                <td colspan="7">
                                  <editor id="editor2"  ref="editor" :value="faq.contents" @input="(payload) => {faq.contents = payload}"></editor>
                                </td>
                            </tr>

                            <tr>
                                <th scope="row"><span class="text-primary">사용여부</span></th>
                                <td>
                                    <div class="row">
                                        <div class="col-sm-12 d-flex align-items-center">
                                            <div class="styled-radio">
                                                <input type="radio" name="radItemStock" id="radItemStock-1" value="Y" v-model="faq.statusCd" >
                                                <label for="radItemStock-1">사용</label>
                                            </div>
                                            <div class="styled-radio">
                                                <input type="radio" name="radItemStock" id="radItemStock-2" value="N" v-model="faq.statusCd" >
                                                <label for="radItemStock-2">미사용</label>
                                            </div>
                                        </div>
                                    </div>
                                </td>
                                <th></th>
                                <td></td>
                            </tr>

                            <tr>
                                <th scope="row"><span class="text-primary">작성자</span></th>
                                <td>홍길동(ID)</td>
                                <th><span class="text-primary">작성일자</span></th>
                                <td>2020-09-05 오후 3:24:19</td>
                            </tr>
                        </tbody>
                    </table>
                </div>

                <div class="widget-footer">
                    <div class="row col">
                        <div class="col-sm-6">
                            <button type="button" class="btn btn-outline-primary" @click="$router.push({name: 'faqList'})">목록</button>
                            <button type="button" class="btn btn-outline-danger">삭제</button>
                        </div>
                        <div class="col-sm-6 d-flex justify-content-end">
                            <button type="button" class="btn btn-primary" @click="openModalPopup(faq.contents, 'preViewModal')">미리보기</button>
                            <button type="button" class="btn btn-primary" @click="save">저장</button>
                        </div>
                    </div>
                </div>
            </div>
            <!-- 입력폼 끝-->

        </div>
    </div>
    <preview-popup v-if="modalOpenFlag && modalPopupId === 'preViewModal'" @close="closeModalPopup" :modalParamObj="modalParamObj"></preview-popup>
</div>
</template>

<script>
import pageHeader from '@/mixin/pageHeader'
import dateSelect from '@/mixin/dateSelect'
import { inputFaq, getFaqList } from '@/api'
import { getCodeGroupDetail } from '@/api/base/CodeApi'
import PreviewPopup from '@/components/popup/common/PreviewPopup.vue'
import Editor from '@/components/parts/Editor.vue'

export default {
  name: 'faqInput',
  mixins: [
    pageHeader({title: 'FAQ등록', groupName: '운영관리'}),
    dateSelect
  ],
  components: {
    getCodeGroupDetail,
    inputFaq,
    getFaqList,
    PreviewPopup,
    Editor
  },
  data: function () {
    return {
      modalOpenFlag: false,
      modalPopupId: '',
      modalParamObj: '',
      faq: {},
      cgCode: 901,
      rows: [],
      pfaq: {}
    }
  },
  created () {
    if (this.$route.params.id !== undefined) {
      let param = {pfaqNo: this.$route.params.id}
      getFaqList(param)
        .then(res => {
          this.faq = res.data[0]
          console.log(this.faq)
        })
    }
    getCodeGroupDetail(this.cgCode)
      .then(res => {
        this.rows = res.data.bigCodeDetail.map((el) => {
          const container = {}
          container.cdName = el.cdName
          console.log(el.cdName)
          return container
        })
      })
  },
  watch: {
    '$route' () {
      this.faq = {}
    }
  },
  methods: {
    save () {
      if (this.faq.faqCategoryCd === undefined) {
        alert('분류를 선택하세요')
        this.$refs.faqCategoryCd.focus()
        return
      }
      if (this.faq.dispOrder === undefined) {
        alert('분류 내 표시순서를 입력하세요')
        this.$refs.dispOrder.focus()
        return
      }
      if (this.faq.title === undefined) {
        alert('제목을 입력하세요')
        this.$refs.title.focus()
        return
      }
      if (this.faq.contents === undefined) {
        alert('내용을 입력하세요')
        this.$refs.editor.focus()
        return
      }
      if (this.faq.statusCd === undefined) {
        alert('사용여부를 선택하세요')
        return
      }
      let param = {
        faqNo: this.faq.faqNo,
        faqCategoryCd: this.faq.faqCategoryCd,
        title: this.faq.title,
        contents: this.faq.contents,
        dispOrder: this.faq.dispOrder,
        statusCd: this.faq.statusCd
      }
      inputFaq(param)
        .then(res => {
          console.log('등록')
          this.$router.push({name: 'faqList'})
        })
        .catch(err => {
          console.log(err)
        })
    },
    openModalPopup (o, id) {
      switch (id) {
        case 'preViewModal':
          this.modalPopupId = 'preViewModal'
          if (o) {
            this.modalParamObj = this.faq.contents
          } else {
            this.modalParamObj = ''
          }
          break
      }
      this.modalOpenFlag = true
      document.body.classList.remove('modal-open')
    },
    // 모달창 close
    closeModalPopup (data) {
      this.modalPopupId = ''
      this.modalOpenFlag = false
      document.body.classList.remove('modal-open')
    }
  }
}
</script>

<style>

</style>
