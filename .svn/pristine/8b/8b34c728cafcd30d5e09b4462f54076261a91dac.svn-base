<template>
  <div class="container-fluid">
    <div class="row">
      <PageHeader :pageCurrentInfo="pageCurrentInfo" />

         <div class="col-sm-12">
            <!-- 검색영역 시작-->
            <div class="widget has-shadow">
                <div class="widget-body">
                    <table class="table table-bordered" summary="주문 검색하기">
                        <colgroup>
                            <col width="10%">
                            <col width="40%">
                            <col width="10%">
                            <col width="40%">
                        </colgroup>
                        <tbody>
                            <tr>
                                <th scope="row"><span class="text-primary">가맹점</span></th>
                                <td>
                                    <div class="row">
                                        <div class="col col-sm-4">
                                            <select class="form-control">
                                                                <option>그룹</option>
                                                                <option>Ketchup</option>
                                                                <option>Relish</option>
                                                            </select>
                                        </div>
                                        <div class="col col-sm-4">
                                            <select class="form-control">
                                                                <option>가맹점</option>
                                                                <option>Ketchup</option>
                                                                <option>Relish</option>
                                                            </select>
                                        </div>
                                    </div>
                                </td>
                                <th><span class="text-primary">거래처</span></th>
                                <td>
                                    <div class="row">
                                        <div class="col-sm-5">
                                            <div class="input-group">
                                                <input type="text" class="form-control" placeholder="거래처검색">
                                                <button type="button" class="btn btn-sm btn-secondary" @click="openModalPopup('vendorList')"><i class="la la-search"></i></button>
                                            </div>
                                        </div>
                                    </div>
                                </td>
                            </tr>
                            <tr>
                                <th scope="row"><span class="text-primary">조회기간</span></th>
                                <td>
                                    <div class="row">
                                        <div class="col-sm-8">
                                            <DateSelect @state-start-date="startDate" @state-end-date="endDate"
                                            :defStartDate="pfromDate"
                                            :defEndDate="ptoDate"></DateSelect>
                                        </div>
                                    </div>
                                </td>
                                <th><span class="text-primary">발주서</span></th>
                                <td>
                                    <div class="row">
                                        <div class="col-sm-5">
                                            <div class="input-group">
                                                <input type="text" class="form-control" placeholder="발주서검색">
                                                <button type="button" class="btn btn-sm btn-secondary"  @click="openModalPopup('buyInvoiceList')"><i class="la la-search"></i></button>
                                            </div>
                                        </div>
                                    </div>
                                </td>
                            </tr>

                        </tbody>
                    </table>

                    <div class="text-center">
                        <button class="btn btn-primary">검색</button>
                    </div>

                </div>
            </div>
            <!-- 검색영역 끝-->

            <!-- 리스트영역 시작 -->
            <div class="widget has-shadow">
                <div class="widget-header bordered">
                    <div class="row">
                        <div class="col-sm-6 d-flex align-items-center justify-content-md-start justify-content-center">
                            <!--table pageper-->
                            <div class="dropdown show vbt-per-page-dropdown col-sm-2">
                                <a class="btn btn-block dropdown-toggle form-control" href="#" role="button" id="dropdownMenuLink" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                    {{config.per_page}}
                                </a>
                                <div class="dropdown-menu" aria-labelledby="dropdownMenuLink">
                                    <a v-for="(option, key, index) in config.per_page_options" :key="index" class="dropdown-item" href="" @click.prevent="perPageHandler(option)" v-bind:class="{ active:  (option == config.per_page)}">
                                        {{option}}
                                    </a>
                                </div>
                            </div>
                            <label class="col-sm-4">조회건수 : {{ rows.length }} 개</label>
                        </div>
                        <div class="col-sm-6 d-flex align-items-center justify-content-md-end justify-content-center">
                            <button class="btn btn-outline-primary">엑셀다운로드</button>
                            <button class="btn btn-outline-primary" @click="saveAdd">저장</button>
                            <button class="btn btn-outline-primary" @click="openModalPopup('buyConfirmPrint')">인쇄</button>
                            <button class="btn btn-outline-danger"  @click="checkCheckBox" :disabled="savebefore">매입확정</button>
                        </div>
                    </div>
                </div>
                <div class="widget-body">
                    <v-table :rows="rows" :columns="columns" :config="config" :classes="classes" :show-loader="showLoader"
                             @on-select-row="selectRowData" @on-unselect-row="selectRowData" :key="componentKey">
                        <template slot="empty-results">
                            조회된 공지사항이 없습니다.
                        </template>
                        <template slot="buyAdd" slot-scope="props">
                            <input class="form-control text-right" v-model="props.row.diiAdd" @input="change" :disabled="props.row.balance === 0 || props.row.balance < 0"/>
                        </template>
                    </v-table>
                </div>
            </div>
            <!-- 리스트영역 끝 -->
        </div>
    </div>

     <vendor-list-popup title="거래처검색" v-if="modalOpenFlag && modalPopupId === 'vendorList'" @close="closeModalPopup"></vendor-list-popup>
     <buy-invoice-list-popup title="발주서 검색" v-if="modalOpenFlag && modalPopupId === 'buyInvoiceList'" @close="closeModalPopup"></buy-invoice-list-popup>
     <buy-confirm-print-popup v-if="modalOpenFlag && modalPopupId === 'buyConfirmPrint'" @close="closeModalPopup"></buy-confirm-print-popup>
     <buy-confirm-popup v-if="modalOpenFlag && modalPopupId === 'buyConfirm'" @close="closeModalPopup" :saveData="select"></buy-confirm-popup>
  </div>
</template>

<script>
import VueBootstrap4Table from 'vue-bootstrap4-table'
import pageHeader from '@/mixin/pageHeader'
import dateSelect from '@/mixin/dateSelect'
import VendorListPopup from '@/components/popup/common/VendorListPopup.vue'
import BuyInvoiceListPopup from '@/components/popup/common/BuyInvoiceListPopup.vue'
import BuyConfirmPopup from '@/components/popup/BuyConfirmPopup.vue'
import BuyConfirmPrintPopup from '@/components/popup/print/BuyConfirmPrintPopup.vue'
import { getPurchaseConfirm, savePurcahseAdd } from '@/api'
import { numberWithCommas, stripComma } from '@/assets/script'

export default {
  name: 'buyConfirm',
  mixins: [
    pageHeader({title: '매입확정', groupName: '구매관리'}),
    dateSelect
  ],
  components: { VendorListPopup, BuyInvoiceListPopup, BuyConfirmPopup, BuyConfirmPrintPopup, VTable: VueBootstrap4Table },
  data () {
    return {
      modalOpenFlag: false,
      modalPopupId: '',
      rows: [],
      columns: [
        {label: '발주일자', name: 'dpoOrderRegdate', sort: true},
        {label: '거래처', name: 'cuName', sort: true, row_classes: 'table-text-left'},
        {label: '품목', name: 'itemName', sort: true, row_classes: 'table-text-left'},
        {label: '발주수량', name: 'dpiCount', sort: true},
        {label: '입고추가', name: 'buyAdd', sort: false, row_classes: 'w80'},
        {label: '입고수량', name: 'diiCount', sort: true},
        {label: '잔량', name: 'balance', sort: true},
        {label: '공급가', name: 'diiSupplyprice', sort: true, row_classes: 'table-text-right'},
        {label: '합계금액', name: 'diiTotalPrice', sort: true, row_classes: 'table-text-right'},
        {label: '잔량합계금액', name: 'balanceTot', sort: true, row_classes: 'table-text-right'}],
      config: {
        pagination: true,
        pagination_info: false,
        num_of_visibile_pagination_buttons: 10,
        checkbox_rows: true,
        highlight_row_hover: false,
        multi_column_sort: false,
        card_mode: false,
        per_page: 20,
        per_page_options: [20, 50, 100],
        show_reset_button: false,
        show_refresh_button: false,
        global_search: {
          placeholder: '',
          visibility: false,
          case_sensitive: false
        },
        loaderText: ''
      },
      classes: {
        table: 'table table-bordered'
      },
      showLoader: false,
      select: {},
      savebefore: true,
      componentKey: 0 // component만 update
    }
  },
  mounted () {
    this.showLoader = true
    this.init()
  },
  methods: {
    forceRerender () {
      this.componentKey += 1
    },
    change (event) {
      let oldNum = ''
      let val = event.target.value.trim()
      if (/^[1-9]\d*$|^$/.test(val)) {
        oldNum = val
      } else {
        event.target.value = oldNum
      }
    },
    // api
    init () {
      getPurchaseConfirm()
        .then(res => {
          this.dataContainer(res.data)
          this.showLoader = false
        })
        .catch(err => {
          console.log(err)
          this.showLoader = false
        })
    },
    dataContainer (data) {
      this.rows = data.map(el => {
        const container = {}
        container.dpoOrderRegdate = this.$moment(el.dpoOrderRegdate).format('YYYY-MM-DD') // 발주일자
        container.cuName = el.cuName // 거래처
        container.itemName = el.itemName // 품목
        container.dpiCount = el.dpiCount // 발주수량
        container.diiAdd = 0 // 입고추가
        container.diiCount = el.diiCount // 입고수량
        container.balance = el.balance // 잔량
        container.diiSupplyprice = numberWithCommas(el.dpiSupplyPrice) // 공급가
        container.diiTotalPrice = numberWithCommas(el.dpiTotalPrice) // 합계금액
        container.balanceTot = numberWithCommas(el.balanceTot) // 잔량합계금액
        container.diiImportdate = new Date()
        container.diiTax = el.dpiTax
        container.dpiCode = el.dpiCode
        container.dpoCode = el.dpoCode
        container.itemId = el.itemId
        return container
      })
    },
    // 선택하기
    selectRowData (e) {
      if (e.selected_items.length > 0) {
        this.select = e.selected_items.filter(el => {
          el.diiCount = el.diiAdd
          return el
        })
      }
    },
    // 입고수량 저장
    saveAdd () {
      if (this.select.length > 0) {
        this.select = this.select.map((el, index) => {
          const container = {}
          if (el.balance !== 0 || el.balance > 0) {
            container.dpiCode = el.dpiCode
            container.dpoCode = el.dpoCode
            container.itemName = el.itemName
            container.diiCount = el.diiCount
            container.diiImportdate = el.diiImportdate
            container.diiSupplyprice = stripComma(el.diiSupplyprice) // ,없애기
            container.diiTax = stripComma(el.diiTax)
            container.diiTotalPrice = stripComma(el.diiTotalPrice)
            container.diiName = null
            container.itemIsbnNum = 0
            container.itemId = el.itemId
            container.diiRegdate = ''
            container.balance = el.balance
          }
          return container
        })
        this.showLoader = true
        let params = {}
        params.importItems = this.select
        // 입고추가 저장하기 api
        savePurcahseAdd(params)
          .then(res => {
            // 입고수량 저장 완료후 수정된 데이타 불러오기
            let saveAddItem = {}
            getPurchaseConfirm(saveAddItem)
              .then(res => {
                this.forceRerender() // selectcheckbox refresh용
                this.dataContainer(res.data)
                this.showLoader = false
                this.savebefore = false
              })
              .catch(err => {
                console.log(err)
                this.showLoader = false
              })
            // 추가저장한 코드를 저장한다
            // 체크된 목록중 추가저장한 코드있으면면 매입확정 팝업에 보이게 한다
            // 추가저장한 코드가 아니면 팝업리스트에 보이지 않는다
          })
          .catch(err => {
            console.log(err)
            this.showLoader = false
          })
      } else {
        alert('체크박스를 입력해 주세요')
      }
    },
    // 매입확정 팝업 오픈전
    checkCheckBox () {
      if (this.select.length > 0) {
        this.openModalPopup('buyConfirm')
      } else {
        alert('체크박스를 입력해 주세요')
      }
    },
    // 모달팝업 open
    openModalPopup (id) {
      switch (id) {
        case 'vendorList': // 거래처검색
          this.modalPopupId = 'vendorList'
          break
        case 'buyInvoiceList': // 발주서 선택
          this.modalPopupId = 'buyInvoiceList'
          break
        case 'buyInvoicePrint': // 구매발주서 인쇄
          this.modalPopupId = 'buyInvoicePrint'
          break
        case 'buyConfirm': // 구매확정버튼시 팝업
          this.modalPopupId = 'buyConfirm'
          break
        case 'buyConfirmPrint': // 매입확정 인쇄 팝업
          this.modalPopupId = 'buyConfirmPrint'
          break
      }
      this.modalOpenFlag = true
    },
    // 모달창 close
    closeModalPopup () {
      this.modalPopupId = ''
      this.modalOpenFlag = false
    }
  }
}
</script>

<style>

</style>
